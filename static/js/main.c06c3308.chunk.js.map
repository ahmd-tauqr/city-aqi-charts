{"version":3,"sources":["CityAQI.js","App.js","index.js"],"names":["CityAQI","useState","aqiData","setAqiData","cityData","setCityData","timeAgoData","setTimeData","useEffect","subscribe","event","data","channel","ws","WebSocket","onopen","send","JSON","stringify","onmessage","response","parse","console","log","parseData","parsedData","onclose","close","arr","getAqiIndicator","aqi","Math","ceil","cities","aqis","timestamps","map","pair","city","cityIndex","indexOf","push","toFixed","moment","now","heading","title","className","item","index","cityRows","aqiRows","fromNow","timeRows","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c06c3308.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst CityAQI = () => {\r\n  const [aqiData, setAqiData] = useState([]);\r\n  const [cityData, setCityData] = useState([]);\r\n  const [timeAgoData, setTimeData] = useState([]);\r\n\r\n  const cityPair = 'cityaqi';\r\n\r\n  useEffect(() => {\r\n    const subscribe = {\r\n      event: 'city',\r\n      data: {\r\n        channel: `city_aqi_${cityPair}`,\r\n      },\r\n    };\r\n    const ws = new WebSocket('wss://city-ws.herokuapp.com');\r\n\r\n    ws.onopen = () => {\r\n      ws.send(JSON.stringify(subscribe));\r\n    };\r\n    ws.onmessage = (event) => {\r\n      const response = JSON.parse(event.data);\r\n      console.log('response fetched: ', response);\r\n      const [parsedData] = parseData(response);\r\n      setCityData(parsedData[0]);\r\n      setAqiData(parsedData[1]);\r\n      setTimeData(parsedData[2]);\r\n    };\r\n    ws.onclose = () => {\r\n      ws.close();\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  });\r\n\r\n  //   helper function to generate aqi level indicators\r\n  const getAqiIndicator = (aqi) => {\r\n    if (Math.ceil(aqi) >= 0 && Math.ceil(aqi) <= 50) {\r\n      return 'good';\r\n    } else if (Math.ceil(aqi) >= 51 && Math.ceil(aqi) <= 100) {\r\n      return 'satisfactory';\r\n    } else if (Math.ceil(aqi) >= 101 && Math.ceil(aqi) <= 200) {\r\n      return 'moderate';\r\n    } else if (Math.ceil(aqi) >= 201 && Math.ceil(aqi) <= 300) {\r\n      return 'poor';\r\n    } else if (Math.ceil(aqi) >= 301 && Math.ceil(aqi) <= 400) {\r\n      return 'very-poor';\r\n    } else if (Math.ceil(aqi) >= 401 && Math.ceil(aqi) <= 500) {\r\n      return 'severe';\r\n    }\r\n  };\r\n\r\n  // helper function to get cities and their respective aqi\r\n  const parseData = (data) => {\r\n    const cities = [...cityData];\r\n    const aqis = [...aqiData];\r\n    const timestamps = [...timeAgoData];\r\n    return data.map((pair) => {\r\n      console.log('pair', pair);\r\n      console.log('current city data: ', cities);\r\n      console.log('city to search', pair.city);\r\n      const cityIndex = cities.indexOf(pair.city);\r\n      console.log('city index: ===>', cityIndex);\r\n      if (cityIndex === -1) {\r\n        console.log('not found');\r\n        console.log('add this data to current data');\r\n        cities.push(pair.city);\r\n        aqis.push(pair.aqi.toFixed(2));\r\n        timestamps.push(moment.now());\r\n        setCityData((cityData) => [...cityData, pair.city]);\r\n        setAqiData((aqiData) => [...aqiData, pair.aqi.toFixed(2)]);\r\n        setTimeData((timeAgoData) => [...timeAgoData, moment.now()]);\r\n      } else if (cityIndex !== -1) {\r\n        console.log('found');\r\n        console.log('update aqi and time stamp for this city');\r\n        aqis[cityIndex] = pair.aqi.toFixed(2);\r\n        setAqiData(aqis);\r\n        timestamps[cityIndex] = moment.now();\r\n        setTimeData(timestamps);\r\n      }\r\n      return [cities, aqis, timestamps];\r\n    });\r\n  };\r\n\r\n  const serialRows = (arr) =>\r\n    arr &&\r\n    arr.map((item, index) => (\r\n      <tr key={index}>\r\n        <td> {index + 1} </td>\r\n      </tr>\r\n    ));\r\n\r\n  const cityRows = (arr) =>\r\n    arr &&\r\n    arr.map((item, index) => (\r\n      <tr key={index} className={getAqiIndicator(item)}>\r\n        <td>{item}</td>\r\n      </tr>\r\n    ));\r\n\r\n  const aqiRows = (arr) =>\r\n    arr &&\r\n    arr.map((item, index) => (\r\n      <tr key={index} className={getAqiIndicator(item)}>\r\n        <td> {item} </td>\r\n      </tr>\r\n    ));\r\n\r\n  const timeRows = (arr) =>\r\n    arr &&\r\n    arr.map((item, index) => (\r\n      <tr key={index}>\r\n        <td className='small'> {moment(item).fromNow()} </td>\r\n      </tr>\r\n    ));\r\n  const heading = (title) => (\r\n    <thead>\r\n      <tr>\r\n        <th>{title}</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n  return (\r\n    <div className='app-container'>\r\n      <div className='aqiDataTable'>\r\n        <table className='serialCol'>\r\n          {heading('No.')}\r\n          <tbody>{serialRows(cityData)}</tbody>\r\n        </table>\r\n        <table className='cityCol'>\r\n          {heading('City')}\r\n          <tbody>{cityRows(cityData)}</tbody>\r\n        </table>\r\n        <table className='aqiCol'>\r\n          {heading('AQI')}\r\n          <tbody>{aqiRows(aqiData)}</tbody>\r\n        </table>\r\n        <table className='timestampCol'>\r\n          {heading('Last Updated')}\r\n          <tbody>{timeRows(timeAgoData)}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityAQI;\r\n","import './App.css';\nimport CityAQI from './CityAQI';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h2>City AQI CHARTS</h2>\n      <CityAQI />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}